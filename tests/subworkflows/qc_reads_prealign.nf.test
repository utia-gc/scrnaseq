nextflow_workflow {

    name "Test Workflow QC_Reads_Prealign"
    script "subworkflows/qc_reads_prealign.nf"
    workflow "QC_Reads_Prealign"

    test("QC_Reads_Prealign succeeds for paired-end reads and cutadapt log with default params.") {

        when {
            params {
                publishDirReports = "${outputDir}/reports"
                publishDirData    = "${outputDir}/data"
            }
            workflow {
                """
                input[0] = [
                    [
                        sampleName:   "Chromium_3p_GEX_Human_PBMC_chr21_100000",
                        readType:     "paired"
                    ],
                    [
                        file("https://github.com/utia-gc/ngs-test/raw/scrnaseq/data/reads/raw/Chromium_3p_GEX_Human_PBMC_chr21_100000_S1_L002_R1_001.fastq.gz"),
                        file("https://github.com/utia-gc/ngs-test/raw/scrnaseq/data/reads/raw/Chromium_3p_GEX_Human_PBMC_chr21_100000_S1_L002_R2_001.fastq.gz")
                    ]
                ]
                """
            }
        }

        then {
            // test workflow status
            assert workflow.success
            assert workflow.trace.succeeded().size() == 2

            // test output for full MultiQC
            with(workflow.out.multiqc.get(0)) {
                String fastqBaseName = 'Chromium_3p_GEX_Human_PBMC_chr21_100000_S1_L002'
                assert size() == 2
                assert get(0) ==~ /^.*\/${fastqBaseName}_R1_001_fastqc.zip/
                assert get(1) ==~ /^.*\/${fastqBaseName}_R2_001_fastqc.zip/
            }
        }

    }

}
