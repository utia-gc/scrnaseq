nextflow_process {

    name "Test Process cellranger_mkref"
    script "modules/cellranger_mkref.nf"
    process "cellranger_mkref"

    test("cellranger_mkref filters builds reference -- RefSeq.") {
        // instantiate instances of helper classes
        def refs = new RefsRefSeq()

        when {
            params {
                publishDirReports = "${outputDir}/reports"
                publishDirData    = "${outputDir}/data"
            }
            process {
                """
                input[0] = file("${refs.sequences.genome.decomp}")
                input[1] = file("${refs.annotations.gtf.decomp}")
                """
            }
        }

        then {
            // test process status
            assert process.success

            // test genome index has expected files and directories
            with(process.out.genome_index.get(0)) {
                assert size() == 4
                assert get(0) ==~ /^.*\/fasta/
                assert get(1) ==~ /^.*\/genes/
                assert get(2) ==~ /^.*\/reference\.json/
                assert get(3) ==~ /^.*\/star/
            }

            // test process reproducibility
            assert snapshot(process.out).match()
        }

    }

}
