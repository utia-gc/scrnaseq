nextflow_workflow {

    name "Test Workflow Parse_Design"
    script "subworkflows/parse_design.nf"
    workflow "Parse_Design"

    test("Parse_Design successfully creates read channels from paired-end samplesheet.") {

        when {
            params {
                publishDirReports = "${outputDir}/reports"
                publishDirData    = "${outputDir}/data"
            }
            workflow {
                """
                input[0] = "https://github.com/utia-gc/ngs-test/raw/scrnaseq/data/samplesheets/samplesheet_L001_L002.csv"
                """
            }
        }

        then {
            // test workflow status
            assert workflow.success

            // test creates expected channels of samples
            with(workflow.out.samples) {
                assert size() == 2

                // test lane 1
                LinkedHashMap expectedMetadataLane1 = [
                    sampleName:   'Chromium_3p_GEX_Human_PBMC_chr21_100000',
                    sampleNumber: '1',
                    lane:         '001',
                    readType:     'paired'
                ]
                with(get(0)) {
                    assert get(0) == expectedMetadataLane1
                }

                // test lane 2
                LinkedHashMap expectedMetadataLane2 = [
                    sampleName:   'Chromium_3p_GEX_Human_PBMC_chr21_100000',
                    sampleNumber: '1',
                    lane:         '002',
                    readType:     'paired'
                ]
                with(get(1)) {
                    assert get(0) == expectedMetadataLane2
                }
            }

            // test output channels reproducibility
            assert snapshot(workflow.out).match()
        }

    }

}
